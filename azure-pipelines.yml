# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  applicationName: 'cpfdevportal'
  dockerRegistryServiceConnection: 'a3b968c1-9a21-4d22-b80e-d4b6241e3bb4'
  containerRegistry: 'cpfdevportal.azurecr.io'
  dockercomposefilePath: '$(Build.SourcesDirectory)/docker-compose.yml'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: UnitTest
  displayName: Unit Test Custom Validation Rules
  jobs:
  - job: Test
    displayName: Unit Test
    steps:
    # - script: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt
    #     pip install pytest pytest-azurepipelines
    #   displayName: 'Install Dependencies'
     
    # - script: |
    #     pytest test_unit.py
    #   workingDirectory: '$(System.DefaultWorkingDirectory)/src/tests/'
    #   displayName: 'pytest'
    - script: |
        npm ci
        npm test
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/src/node/coverage/lcov.info'
        reportDirectory: '$(System.DefaultWorkingDirectory)/src/node/coverage'
      displayName: 'Publish Code Coverage'

- stage: BuildAndPush
  displayName: Build and push stage
  jobs:
  - job: BuildAndPush
    displayName: BuildAndPush
    pool:
      vmImage: $(vmImageName)
    steps:
    # - task: DockerCompose@0
    #   inputs:
    #     containerregistrytype: 'Azure Container Registry'
    #     azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
    #     azureContainerRegistry: '{"loginServer":"cpfdevportal.azurecr.io", "id" : "/subscriptions/dcdbed32-b8b2-4d69-8521-ba8b9056add8/resourceGroups/cpfdevportal-rg/providers/Microsoft.ContainerRegistry/registries/cpfdevportal"}'
    #     dockerComposeFile: $(dockercomposefilePath)
    #     action: 'Build services'
    #     additionalImageTags: '$(Build.BuildId)'
    #     includeLatestTag: true
    # - task: DockerCompose@0
    #   inputs:
    #     containerregistrytype: 'Azure Container Registry'
    #     azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
    #     azureContainerRegistry: '{"loginServer":"cpfdevportal.azurecr.io", "id" : "/subscriptions/dcdbed32-b8b2-4d69-8521-ba8b9056add8/resourceGroups/cpfdevportal-rg/providers/Microsoft.ContainerRegistry/registries/cpfdevportal"}'
    #     dockerComposeFile: $(dockercomposefilePath)
    #     action: 'Push services'
    #     additionalImageTags: '$(Build.BuildId)'
    #     includeLatestTag: true
    - task: Docker@2
      inputs:
        containerRegistry: 'cpfdevportal'
        repository: 'danielxdantecpfdevportal_node'
        command: 'buildAndPush'
        Dockerfile: 'src/node/Dockerfile'
        tags: |
          latest
    - task: Docker@2
      inputs:
        containerRegistry: 'cpfdevportal'
        repository: 'danielxdantecpfdevportal_flask'
        command: 'buildAndPush'
        Dockerfile: 'src/Dockerfile'
        tags: |
          latest


- stage: Deploy
  displayName: Deploy Web App
  jobs:
  - job: Deploy
    displayName: Deploy
    steps:
    - task: AzureWebAppContainer@1
      inputs:
        azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
        appName: 'cpfdevportal-node'
        containers: 'cpfdevportal.azurecr.io/danielxdantecpfdevportal_node:latest'
    - task: AzureWebAppContainer@1
      inputs:
        azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
        appName: 'cpfdevportal'
        containers: 'cpfdevportal.azurecr.io/danielxdantecpfdevportal_flask:latest'

# Integration Test
# - stage: Integration_Test
#   displayName: Integration Test Backend
#   jobs:
#   - job: Test
#     displayName: Integration Test
#     steps:
#     - script: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt
#         pip install selenium
#         pip install pytest pytest-azurepipelines
#       displayName: 'Install Dependencies'
     
#     - script: |
#         pytest src/tests/test_integration.py
#       workingDirectory: '$(System.DefaultWorkingDirectory)/'
#       displayName: 'pytest'