# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  applicationName: 'cpfdevportal'
  dockerRegistryServiceConnection: 'a3b968c1-9a21-4d22-b80e-d4b6241e3bb4'
  imageRepository: 'danielxdantecpfdevportal'
  containerRegistry: 'cpfdevportal.azurecr.io'
  dockercomposefilePath: '$(Build.SourcesDirectory)/docker-compose.yml'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
# - stage: Unit_Test
#   displayName: Unit Test Backend
#   jobs:
#   - job: Test
#     displayName: Unit Test
#     steps:
#     - script: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt
#         pip install pytest pytest-azurepipelines
#       displayName: 'Install Dependencies'
     
#     - script: |
#         pytest test_unit.py
#       workingDirectory: '$(System.DefaultWorkingDirectory)/src/tests/'
#       displayName: 'pytest'

- stage: BuildAndPush
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
        azureContainerRegistry: '{"loginServer":"cpfdevportal.azurecr.io", "id" : "/subscriptions/dcdbed32-b8b2-4d69-8521-ba8b9056add8/resourceGroups/cpfdevportal-rg/providers/Microsoft.ContainerRegistry/registries/cpfdevportal"}'
        dockerComposeFile: $(dockercomposefilePath)
        action: 'Build services'
        additionalImageTags: '$(Build.BuildId)'
        includeLatestTag: true
  - job: Push
    displayName: Push
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
        azureContainerRegistry: '{"loginServer":"cpfdevportal.azurecr.io", "id" : "/subscriptions/dcdbed32-b8b2-4d69-8521-ba8b9056add8/resourceGroups/cpfdevportal-rg/providers/Microsoft.ContainerRegistry/registries/cpfdevportal"}'
        dockerComposeFile: $(dockercomposefilePath)
        action: 'Push services'
        additionalImageTags: '$(Build.BuildId)'
        includeLatestTag: true


- stage: Deploy
  displayName: Deploy Web App
  jobs:
  - job: Deploy
    displayName: Deploy
    steps:
    # - task: AzureWebAppContainer@1
    #   displayName: 'Azure Web App on Container Deploy'
    #   inputs:
    #     azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
    #     appName: $(applicationName)
    #     imageName: cpfdevportal.azurecr.io/danielxdantecpfdevportal:latest
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
        azureContainerRegistry: '{"loginServer":"cpfdevportal.azurecr.io", "id" : "/subscriptions/dcdbed32-b8b2-4d69-8521-ba8b9056add8/resourceGroups/cpfdevportal-rg/providers/Microsoft.ContainerRegistry/registries/cpfdevportal"}'
        dockerComposeFile: $(dockercomposefilePath)
        action: 'Run services'
        buildImages: false


# Integration Test
# - stage: Integration_Test
#   displayName: Integration Test Backend
#   jobs:
#   - job: Test
#     displayName: Integration Test
#     steps:
#     - script: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt
#         pip install selenium
#         pip install pytest pytest-azurepipelines
#       displayName: 'Install Dependencies'
     
#     - script: |
#         pytest src/tests/test_integration.py
#       workingDirectory: '$(System.DefaultWorkingDirectory)/'
#       displayName: 'pytest'